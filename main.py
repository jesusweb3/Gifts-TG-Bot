# main.py
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram Gifts Bot (—Å–∏—Å—Ç–µ–º–∞ —Ç–∞—Ä–≥–µ—Ç–æ–≤) - –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è:
- –ó–∞–ø—É—Å–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤.
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–Ω–æ–≤—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ (–∑–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é).
- –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∫—É–ø–∏—Ç—å —Ç–æ—Ç –∂–µ –ø–æ–¥–∞—Ä–æ–∫.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- main: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
- gift_purchase_worker: –§–æ–Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ —Ç–∞—Ä–≥–µ—Ç–∞–º.
- start_workers: –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤.
- stop_workers: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤.
- are_workers_running: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–æ—Ä–∫–µ—Ä–æ–≤.
"""

# --- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
import asyncio
import logging
import sys
from typing import Set

# --- –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from aiogram import Bot, Dispatcher
from aiogram.utils.backoff import BackoffConfig
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from pyrogram.errors import SecurityCheckMismatch

# --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏ ---
from services.config import (
    ensure_config,
    save_config,
    get_valid_config,
    get_target_display_local,
    update_config_from_env,
    VERSION,
    DEFAULT_BOT_DELAY
)
from services.menu import send_main_menu
from services.balance import refresh_balance, get_balance_from_config
from services.gifts_manager import userbot_targets_updater, get_all_available_target_gifts
from services.buy_userbot import buy_resold_gift_userbot, validate_gift_purchase
from services.userbot import try_start_userbot_from_config, is_userbot_active
from handlers.targets import register_targets_handlers
from handlers.sender_management import register_sender_handlers
from handlers.wizard_states import register_wizard_states_handlers
from handlers.handlers_main import register_main_handlers
from utils.logging import setup_logging
from utils.env_loader import get_env_variable

setup_logging()
logger = logging.getLogger(__name__)

# Hardcoded user credentials - —É–ø—Ä–æ—â–µ–Ω–∏–µ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
TOKEN = get_env_variable("TELEGRAM_BOT_TOKEN")
USER_ID_STR = get_env_variable("TELEGRAM_USER_ID", "0")
USER_ID = int(USER_ID_STR) if USER_ID_STR else 0

if not TOKEN or not USER_ID:
    logger.critical(
        "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –∏ TELEGRAM_USER_ID –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    sys.exit(1)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Ä–∫–µ—Ä–∞–º–∏
_running_tasks: Set[asyncio.Task] = set()


def are_workers_running() -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ —Ñ–æ–Ω–æ–≤—ã–µ –≤–æ—Ä–∫–µ—Ä—ã.

    :return: True –µ—Å–ª–∏ –≤–æ—Ä–∫–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
    """
    return len(_running_tasks) > 0


async def stop_workers() -> None:
    """
    –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ —Ñ–æ–Ω–æ–≤—ã–µ –≤–æ—Ä–∫–µ—Ä—ã.
    """
    global _running_tasks

    if not _running_tasks:
        logger.info("üõë –í–û–†–ö–ï–†–´: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        return

    logger.info(f"üõë –í–û–†–ö–ï–†–´: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ {len(_running_tasks)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–æ—Ä–∫–µ—Ä–æ–≤")

    # –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
    for task in _running_tasks:
        if not task.done():
            task.cancel()
            logger.debug(f"üõë –í–û–†–ö–ï–†–´: –û—Ç–º–µ–Ω–µ–Ω–∞ –∑–∞–¥–∞—á–∞: {task.get_name()}")

    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
    if _running_tasks:
        await asyncio.gather(*_running_tasks, return_exceptions=True)

    _running_tasks.clear()
    logger.info("‚úÖ –í–û–†–ö–ï–†–´: –í—Å–µ –≤–æ—Ä–∫–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")


async def start_workers(bot: Bot) -> bool:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –≤–æ—Ä–∫–µ—Ä—ã –µ—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.

    :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ aiogram
    :return: True –µ—Å–ª–∏ –≤–æ—Ä–∫–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
    """
    global _running_tasks

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    config = await get_valid_config()

    # 1. –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞
    if not config.get("ACTIVE", False):
        logger.warning("‚ö†Ô∏è –í–û–†–ö–ï–†–´: –°–∏—Å—Ç–µ–º–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ - –≤–æ—Ä–∫–µ—Ä—ã –Ω–µ –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã")
        return False

    # 2. –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω
    if not is_userbot_active(USER_ID):
        logger.warning("‚ö†Ô∏è –í–û–†–ö–ï–†–´: –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω - –≤–æ—Ä–∫–µ—Ä—ã –Ω–µ –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã")
        return False

    # 3. –ü–æ–ª—É—á–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    target_user_id = config.get("TARGET_USER_ID")
    target_chat_id = config.get("TARGET_CHAT_ID")
    if not target_user_id and not target_chat_id:
        logger.warning("‚ö†Ô∏è –í–û–†–ö–ï–†–´: –ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –≤–æ—Ä–∫–µ—Ä—ã –Ω–µ –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã")
        return False

    # 4. –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–≥–µ—Ç
    targets = config.get("TARGETS", [])
    enabled_targets = [t for t in targets if t.get("ENABLED", True)]
    if not enabled_targets:
        logger.warning("‚ö†Ô∏è –í–û–†–ö–ï–†–´: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞—Ä–≥–µ—Ç–æ–≤ - –≤–æ—Ä–∫–µ—Ä—ã –Ω–µ –±—É–¥—É—Ç –∑–∞–ø—É—â–µ–Ω—ã")
        return False

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤–æ—Ä–∫–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    if _running_tasks:
        await stop_workers()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Ä–∫–µ—Ä—ã –ë–ï–ó –∏–∑–±—ã—Ç–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    purchase_task = asyncio.create_task(gift_purchase_worker(bot), name="gift_purchase_worker")
    _running_tasks.add(purchase_task)

    targets_task = asyncio.create_task(userbot_targets_updater(USER_ID), name="userbot_targets_updater")
    _running_tasks.add(targets_task)

    # –î–æ–±–∞–≤–ª—è–µ–º callback –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
    def task_done_callback(task: asyncio.Task):
        _running_tasks.discard(task)
        if task.cancelled():
            logger.debug(f"üõë –í–û–†–ö–ï–†–´: –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞: {task.get_name()}")
        elif task.exception():
            logger.error(f"üí• –í–û–†–ö–ï–†–´: –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: {task.get_name()}: {task.exception()}")
        else:
            logger.info(f"‚úÖ –í–û–†–ö–ï–†–´: –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {task.get_name()}")

    purchase_task.add_done_callback(task_done_callback)
    targets_task.add_done_callback(task_done_callback)

    return True


async def gift_purchase_worker(bot: Bot) -> None:
    """
    –§–æ–Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ —Å–∏—Å—Ç–µ–º–µ —Ç–∞—Ä–≥–µ—Ç–æ–≤.
    –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–∞—Ä–≥–µ—Ç—É –∏ –ø–æ–∫—É–ø–∞–µ—Ç —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É—Å–ª–æ–≤–∏—è–º.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ - –∫—É–ø–∏–ª –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.

    :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ aiogram
    :return: None
    """
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
    try:
        await refresh_balance(USER_ID)
        logger.debug("üí∞ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")

    cycle_count = 0

    try:
        while True:
            cycle_count += 1

            try:
                # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                config = await get_valid_config()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
                if not config["ACTIVE"]:
                    logger.info("‚è∏Ô∏è –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –°–∏—Å—Ç–µ–º–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤–æ—Ä–∫–µ—Ä–∞")
                    break

                logger.debug(f"üîÑ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –¶–∏–∫–ª #{cycle_count} - —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω
                if not is_userbot_active(USER_ID):
                    logger.warning("‚ö†Ô∏è –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É")
                    config["ACTIVE"] = False
                    await save_config(config)

                    text = ("‚ö†Ô∏è <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω</b>\n\n"
                            "üì§ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã!\n"
                            "üö¶ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ üî¥ (–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω).")

                    logger.info("üì§ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ")
                    await bot.send_message(chat_id=USER_ID, text=text)
                    await send_main_menu(bot=bot, chat_id=USER_ID, user_id=USER_ID)
                    break

                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ç–∞—Ä–≥–µ—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
                target_user_id = config.get("TARGET_USER_ID")
                target_chat_id = config.get("TARGET_CHAT_ID")
                targets = config.get("TARGETS", [])
                enabled_targets = [t for t in targets if t.get("ENABLED", True)]

                if not enabled_targets:
                    if cycle_count % 60 == 0:  # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
                        logger.debug("üìã –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞—Ä–≥–µ—Ç–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
                    await asyncio.sleep(DEFAULT_BOT_DELAY)
                    continue

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
                if not target_user_id and not target_chat_id:
                    logger.warning("‚ö†Ô∏è –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É")
                    config["ACTIVE"] = False
                    await save_config(config)

                    text = ("‚ö†Ô∏è <b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</b>\n\n"
                            "üì• –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã!\n"
                            "üö¶ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ üî¥ (–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω).")

                    logger.info("üì• –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º –ø–æ–ª—É—á–∞—Ç–µ–ª–µ")
                    await bot.send_message(chat_id=USER_ID, text=text)
                    await send_main_menu(bot=bot, chat_id=USER_ID, user_id=USER_ID)
                    break

                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–æ–≤ –∏–∑ –∫–µ—à–∞
                available_target_gifts = get_all_available_target_gifts(USER_ID)

                if cycle_count % 20 == 0:  # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 20 —Å–µ–∫—É–Ω–¥
                    logger.debug(
                        f"üì¶ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ–¥–∞—Ä–∫–æ–≤: {len(available_target_gifts)}, –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞—Ä–≥–µ—Ç–æ–≤: {len(enabled_targets)}")

                if not available_target_gifts:
                    if cycle_count % 60 == 0:  # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
                        logger.debug("üì¶ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ —Ç–∞—Ä–≥–µ—Ç–∞–º –≤ –∫–µ—à–µ")
                    await asyncio.sleep(DEFAULT_BOT_DELAY)
                    continue

                purchased_any = False

                logger.debug(f"üîç –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ê–Ω–∞–ª–∏–∑ {len(available_target_gifts)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–æ–≤
                for gift_index, target_gift in enumerate(available_target_gifts, 1):
                    target_index = target_gift.get("target_index")
                    target_gift_name = target_gift.get("target_gift_name", "üéÅ")
                    target_max_price = target_gift.get("target_max_price", 0)
                    gift_price = target_gift.get("price", 0)
                    gift_link = target_gift.get("link", "")
                    gift_name = target_gift.get("name", "Unknown")

                    logger.debug(
                        f"üéÅ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∞—Ä–∫–∞ {gift_index}/{len(available_target_gifts)} - {gift_name} –∑–∞ ‚òÖ{gift_price:,}")

                    if not gift_link:
                        logger.warning(f"‚ö†Ô∏è –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –£ –ø–æ–¥–∞—Ä–∫–∞ —Ç–∞—Ä–≥–µ—Ç–∞ {target_index} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Å—ã–ª–∫–∞")
                        continue

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ü–µ–Ω–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
                    if gift_price > target_max_price:
                        logger.warning(
                            f"üí∞ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –¶–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞ {gift_price} –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç —Ç–∞—Ä–≥–µ—Ç–∞ {target_max_price}")
                        continue

                    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π
                    logger.debug(f"‚úÖ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∞ {target_index}")
                    if not await validate_gift_purchase(
                            gift_data=target_gift,
                            target_user_id=target_user_id,
                            target_chat_id=target_chat_id,
                            max_price=target_max_price
                    ):
                        logger.warning(f"‚ùå –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞ —Ç–∞—Ä–≥–µ—Ç–∞ {target_index}")
                        continue

                    # –ü—ã—Ç–∞–µ–º—Å—è –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫
                    logger.info(f"üéØ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–ê–ô–î–ï–ù –ü–û–î–•–û–î–Ø–©–ò–ô –ü–û–î–ê–†–û–ö!")
                    logger.info(f"üéØ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –¢–∞—Ä–≥–µ—Ç: {target_gift_name} (#{target_index})")
                    logger.info(
                        f"üéÅ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü–æ–¥–∞—Ä–æ–∫: {gift_name} –∑–∞ ‚òÖ{gift_price:,} (–ª–∏–º–∏—Ç ‚òÖ{target_max_price:,})")
                    logger.info(f"üîó –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –°—Å—ã–ª–∫–∞: {gift_link}")

                    logger.info("üí≥ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏...")
                    success = await buy_resold_gift_userbot(
                        session_user_id=USER_ID,
                        gift_link=gift_link,
                        target_user_id=target_user_id,
                        target_chat_id=target_chat_id,
                        expected_price=gift_price
                    )

                    if success:
                        target_display = get_target_display_local(target_user_id, target_chat_id, USER_ID)
                        sender_config = config.get("USERBOT", {})
                        sender_name = sender_config.get("FIRST_NAME", "–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å")

                        logger.info("üéâ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü–û–ö–£–ü–ö–ê –£–°–ü–ï–®–ù–ê!")
                        logger.info(f"üéØ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –¢–∞—Ä–≥–µ—Ç: {target_gift_name}")
                        logger.info(f"üéÅ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü–æ–¥–∞—Ä–æ–∫: {gift_name} –∑–∞ ‚òÖ{gift_price:,}")
                        logger.info(f"üì§ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_name}")
                        logger.info(f"üì• –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {target_display}")

                        text = (f"‚úÖ <b>–ü–æ–¥–∞—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!</b>\n\n"
                                f"üéØ –¢–∞—Ä–≥–µ—Ç: {target_gift_name}\n"
                                f"üéÅ –ü–æ–¥–∞—Ä–æ–∫: {gift_name} –∑–∞ ‚òÖ{gift_price:,}\n"
                                f"üí∞ –õ–∏–º–∏—Ç: ‚òÖ{target_max_price:,}\n"
                                f"üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender_name}\n"
                                f"üì• –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {target_display}\n"
                                f"üîó –°—Å—ã–ª–∫–∞: {gift_link}")

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ
                        logger.info("üì≤ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ")
                        await bot.send_message(chat_id=USER_ID, text=text)
                        await send_main_menu(bot=bot, chat_id=USER_ID, user_id=USER_ID)

                        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
                        logger.info("üîÑ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏")
                        try:
                            await refresh_balance(USER_ID)
                            logger.debug("‚úÖ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏")
                        except Exception as balance_error:
                            logger.error(f"‚ùå –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: {balance_error}")

                        purchased_any = True

                        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ä–∞–∑—É –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –ë–ï–ó –ø–∞—É–∑—ã
                        # –ö—É–ø–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ ‚Üí –∑–∞–±—ã–ª–∏ ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
                        logger.debug("üîÑ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü–æ–∫—É–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ü–∏–∫–ª—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
                        break
                    else:
                        logger.error(
                            f"‚ùå –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–µ —É–¥–∞–ª–æ—Å—å –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —Ç–∞—Ä–≥–µ—Ç–∞ {target_index}: {gift_name}")

                # –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –ø–æ–¥–∞—Ä–æ–∫ –Ω–µ —É–¥–∞–ª–æ—Å—å –∫—É–ø–∏—Ç—å, –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–ª–∞–Ω—Å–æ–º –∏–ª–∏ –¥–æ—Å—Ç—É–ø–æ–º
                if not purchased_any and available_target_gifts:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
                    logger.debug("üí∞ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–∫—É–ø–∫–∏")

                    try:
                        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                        current_balance = await refresh_balance(USER_ID)
                        logger.debug(f"üí∞ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {current_balance:,} ‚òÖ")
                    except Exception as balance_error:
                        logger.error(f"‚ùå –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {balance_error}")
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–ª–∞–Ω—Å –∏–∑ –∫–µ—à–∞ –∫–∞–∫ fallback
                        current_balance = await get_balance_from_config(USER_ID)
                        logger.debug(f"üí∞ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ë–∞–ª–∞–Ω—Å –∏–∑ –∫–µ—à–∞: {current_balance:,} ‚òÖ")

                    min_price = min(gift.get("price", 0) for gift in available_target_gifts)

                    if current_balance < min_price:
                        logger.error(f"üí∏ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –ë–ê–õ–ê–ù–°–ê!")
                        logger.error(f"üí∞ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance} ‚òÖ")
                        logger.error(f"üí∏ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º: {min_price} ‚òÖ")

                        config["ACTIVE"] = False
                        await save_config(config)

                        text = (f"‚ö†Ô∏è <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥</b>\n\n"
                                f"üí∞ –ë–∞–ª–∞–Ω—Å: {current_balance} ‚òÖ\n"
                                f"üí∏ –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º: {min_price} ‚òÖ\n"
                                f"üö¶ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ üî¥ (–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω).")

                        logger.info("üì≤ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –±–∞–ª–∞–Ω—Å–∞")
                        await bot.send_message(chat_id=USER_ID, text=text)
                        await send_main_menu(bot=bot, chat_id=USER_ID, user_id=USER_ID)
                        break
                    else:
                        if cycle_count % 30 == 0:  # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
                            logger.debug(
                                "üì¶ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –µ—Å—Ç—å, –Ω–æ –ø–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∫—É–ø–ª–µ–Ω—ã)")

            except asyncio.CancelledError:
                logger.info("üõë –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –í–æ—Ä–∫–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É")
                raise
            except Exception as e:
                logger.error(f"üí• –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ: {e}", exc_info=True)

            await asyncio.sleep(DEFAULT_BOT_DELAY)

    except asyncio.CancelledError:
        logger.info("üõë –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –í–æ—Ä–∫–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É")
        raise
    except Exception as e:
        logger.error(f"üí• –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞: {e}", exc_info=True)
    finally:
        logger.info("üèÅ –í–û–†–ö–ï–† –ü–û–ö–£–ü–û–ö: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –≤–æ—Ä–∫–µ—Ä–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤")


async def main() -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (—Å–∏—Å—Ç–µ–º–∞ —Ç–∞—Ä–≥–µ—Ç–æ–≤) - –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª (config.json)
    - –°–æ–∑–¥–∞—ë—Ç HTTP-—Å–µ—Å—Å–∏—é –∏ –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
    - –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ö–µ–Ω–¥–ª–µ—Ä—ã
    - –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å (–µ—Å–ª–∏ –æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
    - –ù–ï –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ - –æ–Ω–∏ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã

    :return: None
    """
    logger.info("=" * 80)
    logger.info(f"üöÄ STARTUP: Telegram Gifts Bot v{VERSION} - –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    logger.info("=" * 80)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ CONFIG_DATA
    env_config_data = get_env_variable("CONFIG_DATA", None)
    if env_config_data is not None:
        await update_config_from_env(config_data=env_config_data)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    await ensure_config()
    logger.info("‚úÖ STARTUP: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞")

    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher(storage=MemoryStorage())
    logger.info("‚úÖ STARTUP: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω")

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    try:
        bot_info = await bot.get_me()
    except Exception as e:
        logger.error(f"‚ùå STARTUP: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {e}")
        sys.exit(1)

    # –ü—Ä–æ—Å—Ç–∞—è –∑–∞—â–∏—Ç–∞: –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≥—Ä–æ–º–æ–∑–¥–∫–∏—Ö traceback'–æ–≤ SecurityCheckMismatch
    def _loop_exception_handler(event_loop, context):
        exception = context.get("exception")
        if isinstance(exception, SecurityCheckMismatch):
            return
        event_loop.default_exception_handler(context)

    try:
        current_loop = asyncio.get_running_loop()
        current_loop.set_exception_handler(_loop_exception_handler)
    except RuntimeError:
        pass

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    logging.getLogger("pyrogram").setLevel(logging.CRITICAL)
    logging.getLogger("aiogram.dispatcher").setLevel(logging.WARNING)
    logging.getLogger("aiogram.event").setLevel(logging.WARNING)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–æ–¥—É–ª—å–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã (–ø–µ—Ä–µ–¥–∞–µ–º bot –≤ –∫–∞–∂–¥—ã–π –º–æ–¥—É–ª—å)
    register_targets_handlers(dp)
    register_sender_handlers(dp)
    register_wizard_states_handlers(dp)
    register_main_handlers(dp=dp, bot=bot, user_id=USER_ID)
    logger.info("‚úÖ STARTUP: –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

    # –ó–∞–ø—É—Å–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è, –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    bot_id = bot_info.id
    userbot_started = await try_start_userbot_from_config(USER_ID, bot_id)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫
    backoff_config = BackoffConfig(
        min_delay=1.0,
        max_delay=10.0,
        factor=2.0,
        jitter=0.2
    )

    logger.info("üîÑ STARTUP: –ó–∞–ø—É—Å–∫ polling –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegram")
    logger.info("üü¢ STARTUP: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê - –ë–û–¢ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï")
    logger.info("=" * 80)

    try:
        await dp.start_polling(bot, backoff_config=backoff_config)
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Ä–∫–µ—Ä—ã –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        await stop_workers()


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üõë SHUTDOWN: –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (Ctrl+C)")
        logger.info("üëã SHUTDOWN: Telegram Gifts Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as main_exception:
        logger.critical(f"üí• CRITICAL: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {main_exception}", exc_info=True)
        sys.exit(1)