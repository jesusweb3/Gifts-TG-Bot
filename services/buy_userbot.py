# services/buy_userbot.py
"""
–ú–æ–¥—É–ª—å –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ä–µ–∑ Pyrogram –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è:
- –ü–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ —Å –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ä–µ–∑ send_resold_gift.
- –û–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ.
- –í–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π.
- –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –±–∞–ª–∞–Ω—Å–∞.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- buy_resold_gift_userbot: –ü–æ–∫—É–ø–∞–µ—Ç –ø–æ–¥–∞—Ä–æ–∫ —Å –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—é.
"""

# --- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
import asyncio
import logging

# --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–æ–¥—É–ª–∏ ---
from services.config import get_valid_config, save_config
from services.balance import get_sender_stars_balance, change_balance_userbot  # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –±–∞–ª–∞–Ω—Å–∞
from services.userbot import get_userbot_client

from pyrogram import Client
from pyrogram.errors import (
    FloodWait,
    BadRequest,
    Forbidden,
    RPCError,
    AuthKeyUnregistered
)

logger = logging.getLogger(__name__)


async def buy_resold_gift_userbot(
        session_user_id: int,
        gift_link: str,
        target_user_id: int | None,
        target_chat_id: str | None,
        expected_price: int,
        retries: int = 3
) -> bool:
    """
    –ü–æ–∫—É–ø–∞–µ—Ç –ø–æ–¥–∞—Ä–æ–∫ —Å –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏ —á–µ—Ä–µ–∑ Pyrogram –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å.
    –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.

    :param session_user_id: ID —Å–µ—Å—Å–∏–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    :param gift_link: –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://t.me/nft/SnoopDogg-13392)
    :param target_user_id: ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ None)
    :param target_chat_id: Username –ø–æ–ª—É—á–∞—Ç–µ–ª—è-–∫–∞–Ω–∞–ª–∞ (–∏–ª–∏ None)
    :param expected_price: –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–∞—Ä–∫–∞ –≤ –∑–≤—ë–∑–¥–∞—Ö
    :param retries: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    :return: True, –µ—Å–ª–∏ –ø–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞
    """
    logger.info("üí≥ –ü–û–ö–£–ü–ö–ê: ========== –ù–ê–ß–ê–õ–û –ü–†–û–¶–ï–°–°–ê –ü–û–ö–£–ü–ö–ò –ü–û–î–ê–†–ö–ê ==========")
    logger.info(f"üí≥ –ü–û–ö–£–ü–ö–ê: –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫: {gift_link}")
    logger.info(f"üí≥ –ü–û–ö–£–ü–ö–ê: –û–∂–∏–¥–∞–µ–º–∞—è —Ü–µ–Ω–∞: ‚òÖ{expected_price:,}")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    if target_user_id:
        recipient_display = f"User ID: {target_user_id}"
    elif target_chat_id:
        recipient_display = f"Chat: {target_chat_id}"
    else:
        recipient_display = "–ù–µ —É–∫–∞–∑–∞–Ω"
    logger.info(f"üí≥ –ü–û–ö–£–ü–ö–ê: –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient_display}")

    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å (–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
    config = await get_valid_config()
    userbot_config = config.get("USERBOT", {})
    cached_balance = userbot_config.get("BALANCE", 0)

    logger.debug(f"üí∞ –ü–û–ö–£–ü–ö–ê: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å: ‚òÖ{cached_balance:,}, —Ç—Ä–µ–±—É–µ—Ç—Å—è: ‚òÖ{expected_price:,}")

    if cached_balance < expected_price:
        logger.error(f"üí∏ –ü–û–ö–£–ü–ö–ê: –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –ë–ê–õ–ê–ù–°–ê (–ø–æ –∫–µ—à—É)!")
        logger.error(f"üí∞ –ü–û–ö–£–ü–ö–ê: –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å: ‚òÖ{cached_balance:,}")
        logger.error(f"üí∏ –ü–û–ö–£–ü–ö–ê: –¢—Ä–µ–±—É–µ—Ç—Å—è: ‚òÖ{expected_price:,}")

        # –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤
        logger.warning("‚ö†Ô∏è –ü–û–ö–£–ü–ö–ê: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –±–∞–ª–∞–Ω—Å–∞")
        config["USERBOT"]["ENABLED"] = False
        await save_config(config)

        return False

    logger.info("‚úÖ –ü–û–ö–£–ü–ö–ê: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–æ–π–¥–µ–Ω–∞")

    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    client: Client = await get_userbot_client(session_user_id)
    if client is None:
        logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è")
        return False

    logger.debug("üì§ –ü–û–ö–£–ü–ö–ê: –ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω")

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è API
    recipient = target_user_id if target_user_id and not target_chat_id else (
        target_chat_id.lstrip('@') if target_chat_id and not target_user_id else None
    )

    if recipient is None:
        logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è - —É–∫–∞–∑–∞–Ω—ã –æ–±–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ")
        return False

    logger.debug(f"üì• –ü–û–ö–£–ü–ö–ê: –ü–æ–ª—É—á–∞—Ç–µ–ª—å –¥–ª—è API: {recipient}")

    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
    try:
        balance_before_float = await get_sender_stars_balance(session_user_id)
        balance_before = int(balance_before_float)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ int –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        logger.info(f"üí∞ –ü–û–ö–£–ü–ö–ê: –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –î–û –ø–æ–∫—É–ø–∫–∏: ‚òÖ{balance_before:,}")
    except Exception as balance_error:
        logger.error(f"‚ùå –ü–û–ö–£–ü–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: {balance_error}")
        return False

    # –ü–æ–ø—ã—Ç–∫–∏ –ø–æ–∫—É–ø–∫–∏
    for attempt in range(1, retries + 1):
        logger.info(f"üîÑ –ü–û–ö–£–ü–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ #{attempt}/{retries}")

        try:
            logger.debug("üìû –ü–û–ö–£–ü–ö–ê: –í—ã–∑–æ–≤ send_resold_gift")

            # –ü–æ–∫—É–ø–∞–µ–º –ø–æ–¥–∞—Ä–æ–∫ —Å –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–∂–∏
            result = await client.send_resold_gift(
                gift_link=gift_link,
                new_owner_chat_id=recipient,
                star_count=expected_price
            )

            # send_resold_gift –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å None –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—Ö –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞
            logger.info("üîç –ü–û–ö–£–ü–ö–ê: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—Ö–∞ –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –±–∞–ª–∞–Ω—Å...")

            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö Telegram
            await asyncio.sleep(1.0)

            # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
            try:
                balance_after_float = await get_sender_stars_balance(session_user_id)
                balance_after = int(balance_after_float)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ int –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            except Exception as balance_error:
                logger.error(f"‚ùå –ü–û–ö–£–ü–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏: {balance_error}")
                continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ

            logger.info(f"üí∞ –ü–û–ö–£–ü–ö–ê: –ë–∞–ª–∞–Ω—Å –ü–û–°–õ–ï –ø–æ–∫—É–ø–∫–∏: ‚òÖ{balance_after:,}")

            balance_diff = balance_before - balance_after
            logger.info(f"üí∏ –ü–û–ö–£–ü–ö–ê: –†–∞–∑–Ω–∏—Ü–∞ –≤ –±–∞–ª–∞–Ω—Å–µ: ‚òÖ{balance_diff:,}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–ª–∞–Ω—Å —É–º–µ–Ω—å—à–∏–ª—Å—è –Ω–∞ –æ–∂–∏–¥–∞–µ–º—É—é —Å—É–º–º—É (—Å –Ω–µ–±–æ–ª—å—à–æ–π –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å—é)
            if abs(balance_diff - expected_price) <= 1:  # –ü–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å ¬±1 –∑–≤–µ–∑–¥–∞
                logger.info("üéâ –ü–û–ö–£–ü–ö–ê: –ü–û–ö–£–ü–ö–ê –£–°–ü–ï–®–ù–ê!")
                logger.info(f"üí∞ –ü–û–ö–£–ü–ö–ê: –°–ø–∏—Å–∞–Ω–æ —Å–æ —Å—á–µ—Ç–∞: ‚òÖ{balance_diff:,}")
                logger.info(f"üí∞ –ü–û–ö–£–ü–ö–ê: –û–∂–∏–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å: ‚òÖ{expected_price:,}")

                if result:
                    logger.info(f"üìÑ –ü–û–ö–£–ü–ö–ê: Message ID: {result.id}")
                    logger.info(f"üìÖ –ü–û–ö–£–ü–ö–ê: –î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.date}")
                else:
                    logger.info("üìÑ –ü–û–ö–£–ü–ö–ê: API –≤–µ—Ä–Ω—É–ª None (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Ä—Å–∏–π)")

                # –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –∫–æ–Ω—Ñ–∏–≥–µ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
                logger.debug(f"üí∞ –ü–û–ö–£–ü–ö–ê: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ –∫–æ–Ω—Ñ–∏–≥–µ: ‚òÖ{balance_after:,}")
                delta = balance_after - cached_balance  # –í—ã—á–∏—Å–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                await change_balance_userbot(delta, session_user_id)

                logger.info("‚úÖ –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û ==========")
                return True
            elif balance_diff > 0:
                # –ë–∞–ª–∞–Ω—Å —É–º–µ–Ω—å—à–∏–ª—Å—è, –Ω–æ –Ω–µ –Ω–∞ –æ–∂–∏–¥–∞–µ–º—É—é —Å—É–º–º—É
                logger.warning(f"‚ö†Ô∏è –ü–û–ö–£–ü–ö–ê: –ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ!")
                logger.warning(f"üí∞ –ü–û–ö–£–ü–ö–ê: –û–∂–∏–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å: ‚òÖ{expected_price:,}")
                logger.warning(f"üí∏ –ü–û–ö–£–ü–ö–ê: –†–µ–∞–ª—å–Ω–æ —Å–ø–∏—Å–∞–ª–æ—Å—å: ‚òÖ{balance_diff:,}")

                # –í—Å–µ —Ä–∞–≤–Ω–æ —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —É—Å–ø–µ—Ö–æ–º, —Ç–∞–∫ –∫–∞–∫ –¥–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å
                logger.info("üéâ –ü–û–ö–£–ü–ö–ê: –ü–û–ö–£–ü–ö–ê –í–ï–†–û–Ø–¢–ù–û –£–°–ü–ï–®–ù–ê (–Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ü–µ–Ω–∞)")

                # –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –∫–æ–Ω—Ñ–∏–≥–µ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
                delta = balance_after - cached_balance
                await change_balance_userbot(delta, session_user_id)

                logger.info("‚úÖ –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û ==========")
                return True
            else:
                # –ë–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è - –ø–æ–∫—É–ø–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞
                logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: –ë–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è - –ø–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
                logger.error(f"üí∞ –ü–û–ö–£–ü–ö–ê: –ë–∞–ª–∞–Ω—Å –¥–æ: ‚òÖ{balance_before:,}")
                logger.error(f"üí∞ –ü–û–ö–£–ü–ö–ê: –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: ‚òÖ{balance_after:,}")

                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–µ
                continue

        except FloodWait as e:
            logger.warning(f"‚è≥ –ü–û–ö–£–ü–ö–ê: Flood wait - –æ–∂–∏–¥–∞–Ω–∏–µ {e.value} —Å–µ–∫—É–Ω–¥")
            logger.info(f"‚è≥ –ü–û–ö–£–ü–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ #{attempt} –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram")
            await asyncio.sleep(e.value)

        except BadRequest as e:
            error_msg = str(e)
            logger.error(f"‚ùå –ü–û–ö–£–ü–ö–ê: BadRequest - {error_msg}")

            if "BALANCE_TOO_LOW" in error_msg or "not enough" in error_msg.lower():
                logger.error("üí∏ –ü–û–ö–£–ü–ö–ê: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤—ë–∑–¥ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ Telegram")
                logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
                return False
            elif "GIFT_NOT_FOUND" in error_msg:
                logger.error("üéÅ –ü–û–ö–£–ü–ö–ê: –ü–æ–¥–∞—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –∫—É–ø–ª–µ–Ω")
                logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
                return False
            elif "PRICE_CHANGED" in error_msg:
                logger.error("üí∞ –ü–û–ö–£–ü–ö–ê: –¶–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å")
                logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
                return False
            else:
                logger.error(f"‚ùå –ü–û–ö–£–ü–ö–ê: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ BadRequest: {e}")
                logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
                return False

        except Forbidden as e:
            logger.error(f"üö´ –ü–û–ö–£–ü–ö–ê: Forbidden - –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: {e}")
            logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
            return False

        except AuthKeyUnregistered as e:
            logger.error(f"üîë –ü–û–ö–£–ü–ö–ê: AuthKeyUnregistered - —Å–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞: {e}")
            logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
            return False

        except RPCError as e:
            delay = 2 ** attempt
            logger.warning(f"‚ö†Ô∏è –ü–û–ö–£–ü–ö–ê: RPC –æ—à–∏–±–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt}): {e}")
            logger.info(f"‚è≥ –ü–û–ö–£–ü–ö–ê: –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {delay} —Å–µ–∫—É–Ω–¥")
            await asyncio.sleep(delay)

        except Exception as e:
            delay = 2 ** attempt
            logger.error(f"üí• –ü–û–ö–£–ü–ö–ê: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt}): {e}")
            if attempt < retries:
                logger.info(f"‚è≥ –ü–û–ö–£–ü–ö–ê: –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {delay} —Å–µ–∫—É–Ω–¥")
                await asyncio.sleep(delay)

    logger.error(f"‚ùå –ü–û–ö–£–ü–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –ø–æ—Å–ª–µ {retries} –ø–æ–ø—ã—Ç–æ–∫")
    logger.error(f"üîó –ü–û–ö–£–ü–ö–ê: –°—Å—ã–ª–∫–∞: {gift_link}")
    logger.error("‚ùå –ü–û–ö–£–ü–ö–ê: ========== –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô ==========")
    return False


async def validate_gift_purchase(
        gift_data: dict,
        target_user_id: int | None,
        target_chat_id: str | None,
        max_price: int
) -> bool:
    """
    –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π –ø–æ–¥–∞—Ä–∫–∞.

    :param gift_data: –î–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∞ (–¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å link, price, name)
    :param target_user_id: ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    :param target_chat_id: Username –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    :param max_price: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ü–µ–Ω–∞
    :return: True –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã
    """
    logger.debug("‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –ù–∞—á–∞–ª–æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞")

    required_fields = ['link', 'price', 'name']

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    missing_fields = [field for field in required_fields if not gift_data.get(field)]
    if missing_fields:
        logger.error(f"‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing_fields}")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–Ω—É
    gift_price = gift_data['price']
    if gift_price <= 0:
        logger.error(f"‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞: {gift_price}")
        return False

    if gift_price > max_price:
        logger.error(f"‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø: –¶–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞ (‚òÖ{gift_price:,}) –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç (‚òÖ{max_price:,})")
        return False

    logger.debug(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –¶–µ–Ω–∞ –ø–æ–¥–∞—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: ‚òÖ{gift_price:,} (–ª–∏–º–∏—Ç: ‚òÖ{max_price:,})")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    if not target_user_id and not target_chat_id:
        logger.error("‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø: –ù–µ —É–∫–∞–∑–∞–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—å –ø–æ–¥–∞—Ä–∫–∞")
        return False

    if target_user_id and target_chat_id:
        logger.error("‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø: –£–∫–∞–∑–∞–Ω—ã –æ–±–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è - user_id –∏ chat_id")
        return False

    if target_user_id:
        logger.debug(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –ü–æ–ª—É—á–∞—Ç–µ–ª—å - User ID: {target_user_id}")
    else:
        logger.debug(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –ü–æ–ª—É—á–∞—Ç–µ–ª—å - Chat: {target_chat_id}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫
    gift_link = gift_data['link']
    if not gift_link.startswith('https://t.me/nft/'):
        logger.error(f"‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫: {gift_link}")
        return False

    logger.debug(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞: {gift_link}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞
    gift_name = gift_data['name']
    logger.debug(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞: {gift_name}")

    logger.debug("‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    return True