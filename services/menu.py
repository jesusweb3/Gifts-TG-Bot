# services/menu.py
"""
–ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é Telegram –±–æ—Ç–∞ (—Å–∏—Å—Ç–µ–º–∞ —Ç–∞—Ä–≥–µ—Ç–æ–≤) - –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è:
- –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –º–µ–Ω—é —Å —Ç–∞—Ä–≥–µ—Ç–∞–º–∏.
- –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é –≤ –µ–¥–∏–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å fallback –Ω–∞ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- update_menu: –û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏.
- safe_edit_menu: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫.
- config_action_keyboard: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –≤ –º–µ–Ω—é.
"""

# --- –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.exceptions import TelegramBadRequest
import logging

# --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
from services.config import get_valid_config, format_config_summary

logger = logging.getLogger(__name__)


def config_action_keyboard(active: bool) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ (—Å–∏—Å—Ç–µ–º–∞ —Ç–∞—Ä–≥–µ—Ç–æ–≤).
    """
    logger.debug(f"üéõÔ∏è –ú–ï–ù–Æ: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è {'–∞–∫—Ç–∏–≤–Ω–æ–π' if active else '–Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π'} —Å–∏—Å—Ç–µ–º—ã")

    toggle_text = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if active else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text=toggle_text, callback_data="toggle_active"),
            InlineKeyboardButton(text="üéØ –¢–∞—Ä–≥–µ—Ç—ã", callback_data="targets_menu")
        ],
        [
            InlineKeyboardButton(text="üì• –ü–æ–ª—É—á–∞—Ç–µ–ª—å", callback_data="recipient_menu"),
            InlineKeyboardButton(text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å", callback_data="sender_menu")
        ]
    ])

    logger.debug(f"üéõÔ∏è –ú–ï–ù–Æ: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –∫–Ω–æ–ø–∫–æ–π '{toggle_text}'")
    return keyboard


async def safe_edit_menu(message: Message, text: str, reply_markup: InlineKeyboardMarkup = None) -> bool:
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é. –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–µ—Ç—Å—è,
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    :param text: –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param reply_markup: –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    :return: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ, False –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ
    """
    message_id = message.message_id
    chat_id = message.chat.id

    logger.debug(f"üîÑ –ú–ï–ù–Æ: –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è ID {message_id} –≤ —á–∞—Ç–µ {chat_id}")

    try:
        await message.edit_text(text, reply_markup=reply_markup, disable_web_page_preview=True)
        logger.debug(f"‚úÖ –ú–ï–ù–Æ: –°–æ–æ–±—â–µ–Ω–∏–µ ID {message_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ")
        return True
    except TelegramBadRequest as e:
        error_msg = str(e).lower()

        # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if "message is not modified" in error_msg:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
            logger.debug(f"‚ÑπÔ∏è –ú–ï–ù–Æ: –°–æ–æ–±—â–µ–Ω–∏–µ ID {message_id} –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å")
            return True
        elif "message to edit not found" in error_msg or "message can't be edited" in error_msg:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ
            logger.warning(f"‚ö†Ô∏è –ú–ï–ù–Æ: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ID {message_id}: {e}")

            try:
                new_message = await message.answer(text, reply_markup=reply_markup, disable_web_page_preview=True)
                logger.info(f"‚úÖ –ú–ï–ù–Æ: –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ID {new_message.message_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            except Exception as send_error:
                logger.error(f"‚ùå –ú–ï–ù–Æ: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_error}")
            return False
        else:
            logger.error(f"‚ùå –ú–ï–ù–Æ: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ID {message_id}: {e}")
            return False
    except Exception as e:
        logger.error(f"üí• –ú–ï–ù–Æ: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ID {message_id}: {e}")
        try:
            new_message = await message.answer(text, reply_markup=reply_markup, disable_web_page_preview=True)
            logger.info(f"‚úÖ –ú–ï–ù–Æ: Fallback —Å–æ–æ–±—â–µ–Ω–∏–µ ID {new_message.message_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        except Exception as send_error:
            logger.error(f"‚ùå –ú–ï–ù–Æ: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ fallback –æ—Ç–ø—Ä–∞–≤–∫–∏: {send_error}")
        return False


async def update_menu(bot: Bot, chat_id: int, user_id: int, message_id: int) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏.

    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param chat_id: ID —á–∞—Ç–∞
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    try:
        config = await get_valid_config()
        text = format_config_summary(config, user_id)
        keyboard = config_action_keyboard(config.get("ACTIVE", False))

        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )

    except TelegramBadRequest as e:
        error_msg = str(e).lower()

        if "message is not modified" in error_msg:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
            logger.debug(f"‚ÑπÔ∏è –ú–ï–ù–Æ: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å (ID {message_id})")
        elif "message to edit not found" in error_msg or "message can't be edited" in error_msg:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            logger.warning(f"‚ö†Ô∏è –ú–ï–ù–Æ: –°–æ–æ–±—â–µ–Ω–∏–µ ID {message_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

            try:
                config = await get_valid_config()
                text = format_config_summary(config, user_id)
                keyboard = config_action_keyboard(config.get("ACTIVE", False))

                new_message = await bot.send_message(
                    chat_id=chat_id,
                    text=text,
                    reply_markup=keyboard,
                    disable_web_page_preview=True
                )

                logger.info(f"‚úÖ –ú–ï–ù–Æ: –ù–æ–≤–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID {new_message.message_id})")

            except Exception as send_error:
                logger.error(f"‚ùå –ú–ï–ù–Æ: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {send_error}")
        else:
            logger.error(f"‚ùå –ú–ï–ù–Æ: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")

    except Exception as e:
        logger.error(f"üí• –ú–ï–ù–Æ: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")


async def send_main_menu(bot: Bot, chat_id: int, user_id: int) -> int:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ).

    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
    :param chat_id: ID —á–∞—Ç–∞
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    try:
        config = await get_valid_config()
        text = format_config_summary(config, user_id)
        keyboard = config_action_keyboard(config.get("ACTIVE", False))

        sent = await bot.send_message(
            chat_id=chat_id,
            text=text,
            reply_markup=keyboard,
            disable_web_page_preview=True
        )

        logger.info(f"‚úÖ –ú–ï–ù–Æ: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID {sent.message_id})")
        return sent.message_id

    except Exception as e:
        logger.error(f"‚ùå –ú–ï–ù–Æ: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")

        # Fallback - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
        try:
            fallback_text = ("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é</b>\n\n"
                             "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.\n"
                             "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç –∫–æ–º–∞–Ω–¥–æ–π /start")

            fallback_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫", callback_data="main_menu")]
            ])

            sent = await bot.send_message(
                chat_id=chat_id,
                text=fallback_text,
                reply_markup=fallback_keyboard,
                disable_web_page_preview=True
            )

            logger.info(f"‚úÖ –ú–ï–ù–Æ: –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID {sent.message_id})")
            return sent.message_id

        except Exception as fallback_error:
            logger.critical(f"üí• –ú–ï–ù–Æ: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é: {fallback_error}")
            raise